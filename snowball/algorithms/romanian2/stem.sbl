stringescapes {}

/* special characters (Unicode) */
   
stringdef ab    hex '103'                                // a-breve
stringdef a^    hex 'E2'                                 // a-circumflex
stringdef i^    hex 'EE'                                 // i-circumflex
stringdef s,    hex '15F'                                // s-cedilla
stringdef t,    hex '163'                                // t-cedilla


routines ( mark_regions RV R1
           verb_non_personal_moods
           verb_conjugation
           definite_article
           number_plural
           residual_suffix
)

externals ( stem )

integers ( pV p1 x )

groupings ( v )

define v 'aeiou{ab}{a^}{i^}'


define mark_regions as (

    $pV = limit
    $p1 = limit

    test(hop 3 setmark x)
    
    gopast v  setmark pV 
    try($pV < x  $pV = x)                                // at least 3
    gopast non-v setmark p1
    try($p1 < x  $p1 = x)                                // at least 3
)


backwardmode (

    define RV as $pV <= cursor
    define R1 as $p1 <= cursor

    define verb_non_personal_moods as (
        [substring] R1 among (
            'are' 'ere' 'ire' '{a^}re'                   //infinitive
            'at' 'ut' 's' 't' 'it' '{a^}t'               //participle
            'ind' '{a^}nd'                               //gerund 
            'indu' '{a^}ndu'
                (delete)
        )
    )

    define verb_conjugation as (
        setlimit tomark p1 for ([substring])
        among (
            'ez' 'ezi' 'eaz{ab}' 'esc' 'e{s,}ti' 
            'e{s,}te' '{ab}sc' '{ab}{s,}ti' '{ab}{s,}te' //prezent
            'am' 'ai' 'au' 'eam' 'eai' 'ea' 'eau' 
            'iam' 'iai' 'ia' 'iau' 'ea{t,}i' 'ia{t,}i'   //imperfect  
            '{a^}i'
            'a{s,}i' 'ar{ab}m' 'ar{ab}{t,}i' 'ar{ab}'
            'u{s,}i' 'ur{ab}m' 'ur{ab}{t,}i' 'ur{ab}'
            'i{s,}i' 'ir{ab}m' 'ir{ab}{t,}i' 'ir{ab}'
            '{a^}{s,}i' '{a^}r{ab}m' '{a^}r{ab}{t,}i'
            '{a^}r{ab}'                                  //simple perfect
            'ase' 'use' 'ise' '{a^}se'
            'asem' 'ase{s,}i' 'aser{ab}m' 'aser{ab}{t,}i' 'aser{ab}'
            'usem' 'use{s,}i' 'user{ab}m' 'user{ab}{t,}i' 'user{ab}'
            'isem' 'ise{s,}i' 'iser{ab}m' 'iser{ab}{t,}i' 'iser{ab}'
            '{a^}sem' '{a^}se{s,}i' '{a^}ser{ab}m' '{a^}ser{ab}{t,}i'
            '{a^}ser{ab}'                                //pluperfect
                (test (non-v or 'u') delete)
            '{ab}m' 'em' 'im' '{a^}m' 'a{t,}i' 'e{t,}i' 
            'i{t,}i' '{a^}{t,}i'                         //prezent
            'se{s,}i' 'ser{ab}m' 'ser{ab}{t,}i' 'ser{ab}'
            'sei''se'                                    //simple perfect
            'sesem' 'sese{s,}i' 'seser{ab}m' 'seser{ab}{t,}i' 'seser{ab}'
            'sese'                                       //pluperfect            
                (delete)
            'ui'                                         //simple perfect
                (test non-v not 'l' delete)              //not match 'lui' (article)
        )
    )

    define definite_article as (
        setlimit tomark pV for ([substring])
        among (
            'ul' 'l' 'a' 'ua' 'ia' 'eaua'
            'lui' 'lor'                                  //genitive + dative
            'o' 'ule'                                    //vocative
                (delete)
            'le'
                (test v delete)
            'i'
                (not 'ur' delete)                        //not match uri (plural)
        )
    )

    define number_plural as (
        setlimit tomark pV for ([substring])
        among (
            'i' 'uri' 'e'
                (delete)
            'le'
                (test v delete)   
        )
    )

    define residual_suffix as (
        [substring] RV among (
            'a' 'e' 'i' 'u' '{i^}' '{ab}' '{a^}'
            // 'o' 
               (delete)
        )
    )
)

define stem as (
    do mark_regions
    backwards (
        do (
             verb_non_personal_moods or verb_conjugation or
             ( try definite_article and number_plural )
        )
        do residual_suffix
    )
)
